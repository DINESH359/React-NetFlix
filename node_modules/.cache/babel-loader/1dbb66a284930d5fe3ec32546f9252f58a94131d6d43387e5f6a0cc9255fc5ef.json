{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-NetFlix\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchIcon from './search.svg';\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://www.omdbapi.com?apikey=b6003d8a\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null); // Store detailed movie info\n\n  // Function to search for movies\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  };\n\n  // Function to fetch detailed movie info by IMDb ID\n  const fetchMovieDetails = async imdbID => {\n    const response = await fetch(`${API_URL}&i=${imdbID}`);\n    const data = await response.json();\n    setSelectedMovie(data); // Store detailed info in state\n  };\n\n  useEffect(() => {\n    searchMovies(\"Batman\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NetFlix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for a movie\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"Search\",\n        onClick: () => searchMovies(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie,\n        onMovieClick: fetchMovieDetails\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedMovie.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }, this), \" \", selectedMovie.Year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }, this), \" \", selectedMovie.Genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Director:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 14\n        }, this), \" \", selectedMovie.Director]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Plot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 14\n        }, this), \" \", selectedMovie.Plot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedMovie.Poster,\n        alt: selectedMovie.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+7uQn7VOD64AgwL3T/31elL75T0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","SearchIcon","MovieCard","jsxDEV","_jsxDEV","API_URL","App","_s","searchTerm","setSearchTerm","movies","setMovies","selectedMovie","setSelectedMovie","searchMovies","title","response","fetch","data","json","Search","fetchMovieDetails","imdbID","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","src","alt","onClick","length","map","movie","onMovieClick","Title","Year","Genre","Director","Plot","Poster","_c","$RefreshReg$"],"sources":["E:/React-NetFlix/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport SearchIcon from './search.svg';\r\nimport MovieCard from './MovieCard';\r\n\r\nconst API_URL = \"http://www.omdbapi.com?apikey=b6003d8a\";\r\n\r\nfunction App() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null); // Store detailed movie info\r\n\r\n  // Function to search for movies\r\n  const searchMovies = async (title) => {\r\n    const response = await fetch(`${API_URL}&s=${title}`);\r\n    const data = await response.json();\r\n    setMovies(data.Search);\r\n  }\r\n\r\n  // Function to fetch detailed movie info by IMDb ID\r\n  const fetchMovieDetails = async (imdbID) => {\r\n    const response = await fetch(`${API_URL}&i=${imdbID}`);\r\n    const data = await response.json();\r\n    setSelectedMovie(data); // Store detailed info in state\r\n  }\r\n\r\n  useEffect(() => {\r\n    searchMovies(\"Batman\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>NetFlix</h1>\r\n      <div className='search'>\r\n        <input\r\n          placeholder='Search for a movie'\r\n          value={searchTerm}\r\n          onChange={(e) => {\r\n            setSearchTerm(e.target.value);\r\n          }}\r\n        />\r\n        <img \r\n          src={SearchIcon}\r\n          alt='Search'\r\n          onClick={() => searchMovies(searchTerm)}\r\n        />\r\n      </div>\r\n\r\n      {movies?.length > 0 ? (\r\n        <div className=\"container\">\r\n          {movies.map((movie) => (\r\n            <MovieCard key={movie.imdbID} movie={movie} onMovieClick={fetchMovieDetails} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"empty\">\r\n          <h2>No movies found</h2>\r\n        </div>\r\n      )}\r\n\r\n      {selectedMovie && (\r\n        <div className=\"movie-details\">\r\n          <h2>{selectedMovie.Title}</h2>\r\n          <p><strong>Year:</strong> {selectedMovie.Year}</p>\r\n          <p><strong>Genre:</strong> {selectedMovie.Genre}</p>\r\n          <p><strong>Director:</strong> {selectedMovie.Director}</p>\r\n          <p><strong>Plot:</strong> {selectedMovie.Plot}</p>\r\n          <img src={selectedMovie.Poster} alt={selectedMovie.Title} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}